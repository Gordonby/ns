{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.18.10",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "networkPlugin": {
            "type": "string",
            "defaultValue": "kubenet",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off of RBAC."
            }
        },
        "enableAzurePolicy": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off Azure Policy addon."
            }
        },
        "enableOmsAgent": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off omsagent addon."
            }
        },
        "useExistingWorkspace": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "omsWorkspaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the resource id of the OMS workspace."
            }
        },
        "guidValue": {
            "type": "string",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
            },
            "defaultValue": "[newGuid()]"
        },
        "networkPolicy": {
            "type": "string",
            "defaultValue": "none",
            "allowedValues": [
                "none",
                "calico",
                "azure"
            ],
            "metadata": {
                "description": "Network policy used for building Kubernetes network."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2"
        },
        "enableAcr": {
            "type": "bool",
            "defaultValue": false
        },
        "identity": {
            "type": "object",
            "defaultValue": {
                "value": {
                    "type": "SystemAssigned"
                }
            }
        }
    },
    "resources": [
        {
            "apiVersion": "2020-09-01",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('resourceName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', concat(parameters('resourceName'), subscription().subscriptionId))]",
                "containerSolutionToExistingLa"
            ],
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": 3,
                        "vmSize": "[parameters('vmSize')]",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 30,
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ]
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[if(equals(parameters('networkPlugin'), 'none'), json(''), parameters('networkPlugin'))]",
                    "networkPolicy": "[parameters('networkPolicy')]"
                },
                "aadProfile": {
                    "managed": true
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": false
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": false
                    },
                    "azurePolicy": {
                        "enabled": "[parameters('enableAzurePolicy')]"
                    },
                    "omsagent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[if(equals(parameters('useExistingWorkspace'), 'No'), resourceId('Microsoft.OperationalInsights/workspaces', concat(parameters('resourceName'), subscription().subscriptionId)), parameters('omsWorkspaceId'))]"
                        }
                    }
                }
            },
            "tags": {},
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "condition": "[and(not(equals(parameters('useExistingWorkspace'), 'Yes')), empty(parameters('omsWorkspaceId')))]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('resourceName'), subscription().subscriptionId)]",
            "properties": {
                "sku": {
                    "name": "Standalone"
                }
            }
        },
        {
            "condition": "[and(not(equals(parameters('useExistingWorkspace'), 'Yes')), empty(parameters('omsWorkspaceId')))]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "name": "[concat('ContainerInsights', '(', parameters('resourceName'), subscription().subscriptionId, ')')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', concat(parameters('resourceName'), subscription().subscriptionId))]"
            ],
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', concat(parameters('resourceName'), subscription().subscriptionId))]"
            },
            "plan": {
                "name": "[concat('ContainerInsights', '(', parameters('resourceName'), subscription().subscriptionId, ')')]",
                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                "promotionCode": "",
                "publisher": "Microsoft"
            }
        },
        {
            "condition": "[and(equals(parameters('useExistingWorkspace'), 'Yes'), not(empty(parameters('omsWorkspaceId'))))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-10",
            "name": "containerSolutionToExistingLa",
            "resourceGroup": "[if(not(empty(parameters('omsWorkspaceId'))), split(parameters('omsWorkspaceId'), '/')[4], 'na')]",
            "subscriptionId": "[if(not(empty(parameters('omsWorkspaceId'))), split(parameters('omsWorkspaceId'), '/')[4], subscription().subscriptionId)]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationsManagement/solutions",
                            "apiVersion": "2015-11-01-preview",
                            "name": "[concat('ContainerInsights', '(', split(parameters('omsWorkspaceId'), '/')[8], ')')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "workspaceResourceId": "[parameters('omsWorkspaceId')]"
                            },
                            "plan": {
                                "name": "[concat('ContainerInsights', '(', split(parameters('omsWorkspaceId'), '/')[8], ')')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "acrDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.ContainerRegistry/registries",
                            "apiVersion": "2019-05-01",
                            "name": "[concat(parameters('resourceName'), 'acr')]",
                            "location": "[resourceGroup().location]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "adminUserEnabled": false
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
        }
    }
}